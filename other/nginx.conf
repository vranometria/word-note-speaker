worker_processes  1;

events {
    worker_connections  1024;
}


http {

    map $request_method $json_content_type {
        default "application/json";
        GET "";
    }

    server {
        listen 80;

        access_by_lua_block {
            local method = ngx.req.get_method()
            ngx.req.read_body()
            local data = ngx.req.get_body_data()
            local cjson = require "cjson"
            local body = {
                httpMethod = method
            }

            if data then
                if method == "PUT" or method == "POST" or method == "PATCH" then
                    body["body"] = data 
                end
            end

            local new_body = cjson.encode(body)
            ngx.req.set_body_data(new_body)
        }

        location /questions {
            # CORS用のヘッダーを全リクエストに追加
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

            # OPTIONSメソッドに対する特別な処理
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
                add_header 'Access-Control-Max-Age' 1728000;  # プリフライトリクエストのキャッシュ時間
                return 204;  # No Content ステータスコードで応答
            }

            
            proxy_pass http://lambda-question:8080/2015-03-31/functions/function/invocations;  # questionコンテナへのリクエストを転送

            proxy_set_header Content-Type "application/json";  # JSON形式であることを明示
            proxy_set_header Content-Length $content_length;
            proxy_set_header Host $host;
        }

        location /tags {
            # CORS用のヘッダーを全リクエストに追加
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

            # OPTIONSメソッドに対する特別な処理
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
                add_header 'Access-Control-Max-Age' 1728000;  # プリフライトリクエストのキャッシュ時間
                return 204;  # No Content ステータスコードで応答
            }


            proxy_pass http://lambda-tag:8080/2015-03-31/functions/function/invocations;  # tagsコンテナへのリクエストを転送
            proxy_set_header Content-Length $content_length;
            proxy_set_header Host $host;
        }
    }
}